name: Reliably Staging Docs Build/Deploy

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'


env:
  IMAGE_NAME: eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}/docs/staging-docs:${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: npm ci

      - name: Build Gridsome
        run: npm run-script build
        env:
          GRIDSOME_ALGOLIA_APP_ID: ${{ secrets.GRIDSOME_ALGOLIA_APP_ID }}
          GRIDSOME_ALGOLIA_ADMIN_KEY: ${{ secrets.GRIDSOME_ALGOLIA_ADMIN_KEY }}
          GRIDSOME_ALGOLIA_INDEX_NAME: ${{ secrets.GRIDSOME_ALGOLIA_INDEX_NAME_STAGING }}

      - name: Authenticate with Gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker
        run: gcloud --project ${{secrets.GCP_PROJECT}} auth configure-docker eu.gcr.io --quiet

      - name: Build container image
        run: docker build --no-cache -t $IMAGE_NAME .

      - name: Push container image
        run: docker push $IMAGE_NAME

      # Deploy to GKE

      - name: setup helm
        uses: azure/setup-helm@v1

      - name: install kubectl
        uses: azure/setup-kubectl@v1

      - name: get kubenetes config
        env:
          KUBE_CLUSTER: apps-staging-gke
        run: |
          gcloud container clusters get-credentials ${{ env.KUBE_CLUSTER }} \
            --region europe-west1 \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: install/update web UI via helm
        working-directory: helm
        env:
          NAMESPACE: default
        run: |
          helm upgrade doc . \
            -n ${{ env.NAMESPACE }} \
            --set image=$IMAGE_NAME \
            --set env.gcp_project_id=${{ secrets.GCP_PROJECT_ID }} \
            --install

      # End - Deploy to GKE

      - name: Invalidate CDN cache to serve latest policies
        run: |
          gcloud --project ${{ secrets.GCP_PROJECT }} compute url-maps invalidate-cdn-cache staging-lb --host reliably.dev --path "/docs/*" --async